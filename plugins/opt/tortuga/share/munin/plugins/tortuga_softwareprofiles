#!/usr/bin/env python

# Copyright 2008-2018 Univa Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import sys
import itertools

from tortuga.softwareprofile import softwareProfileFactory
from tortuga.node import nodeApiFactory


def getNodeDict():
    swProfileApi = softwareProfileFactory.getSoftwareProfileApi()
    nodeApi = nodeApiFactory.getNodeApi()

    response = {}

    # All nodes
    nodeList = set([n.getName() for n in nodeApi.getNodeList()])

    for swProfile in swProfileApi.getSoftwareProfileList():
        _swProfile = swProfileApi.getSoftwareProfile(
            swProfile.getName(), {'nodes': True})

        response[swProfile.getName()] = [n.getName() for n in _swProfile.getNodes()]

        nodeList = nodeList.difference(set(response[swProfile.getName()]))

    response['-'] = list(nodeList)

    return response


def main():
    bConfig = len(sys.argv) == 2 and sys.argv[1] == 'config'

    if bConfig:
        print """\
graph_title Tortuga nodes (by software profile)
graph_info This graph show node distribution across Tortuga software profiles
graph_category tortuga
graph_args --base 1000 -l 0
graph_vlabel Number of nodes"""

    nTotal = 0

    result = getNodeDict()

    bFirst = True

    ord = []

    for _swProfileName, nodes in result.iteritems():
        swProfileName = _swProfileName.lower() if _swProfileName != '-' else 'undefined'

        if bConfig:
            if bFirst:
                print '%s.draw AREA' % (swProfileName)
                bFirst = False
            else:
                print '%s.draw STACK' % (swProfileName)

            if swProfileName == 'undefined':
                print 'undefined.info No assigned software profile'
            else:
                print '%s.info %s' % (swProfileName, _swProfileName)

            lbl = 'undefined' if _swProfileName == '-' else _swProfileName

            print '%s.label %s' % (swProfileName, lbl)

            if lbl != 'undefined':
                ord.append(swProfileName)
        else:
            nNodeCount = len(nodes)
            print '%s.value %d' % (swProfileName, nNodeCount)

            nTotal += nNodeCount

    ord.append('undefined')
    ord.append('total')

    if bConfig:
        print 'graph_order %s' % (' '.join(ord))
        print 'total.label total'
        print 'total.draw LINE1'
        print 'total.colour FF0000'
        print 'total.info Total number of nodes.'
    else:
        print 'total.value %d' % (nTotal)

if __name__ == '__main__':
    main()
