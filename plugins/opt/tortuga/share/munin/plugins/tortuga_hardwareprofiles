#!/usr/bin/env python

# Copyright 2008-2018 Univa Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import sys
import itertools

from tortuga.node import nodeApiFactory


def getNodeDict():
    nodeApi = nodeApiFactory.getNodeApi()

    response = {}

    # All nodes
    for node in nodeApi.getNodeList():
        if not node.getHardwareProfile().getName() in response:
            response[node.getHardwareProfile().getName()] = 1
        else:
            response[node.getHardwareProfile().getName()] += 1

    return response


def main():
    bConfig = len(sys.argv) == 2 and sys.argv[1] == 'config'

    if bConfig:
        print """\
graph_title Tortuga node distribution by hardware profile
graph_info This graph show node distribution across Tortuga hardware profiles
graph_category tortuga
graph_args --base 1000 -l 0
graph_vlabel Number of nodes"""

    nTotal = 0

    result = getNodeDict()

    bFirst = True

    ord = []

    for _hwProfileName, nNodeCount in result.iteritems():
        hwProfileName = _hwProfileName.lower()

        if bConfig:
            if bFirst:
                print '%s.draw AREA' % (hwProfileName)
                bFirst = False
            else:
                print '%s.draw STACK' % (hwProfileName)

            print '%s.info %s' % (hwProfileName, _hwProfileName)
            print '%s.label %s' % (hwProfileName, _hwProfileName)

            ord.append(hwProfileName)
        else:
            print '%s.value %d' % (hwProfileName, nNodeCount)

            nTotal += nNodeCount

    ord.append('total')

    if bConfig:
        print 'graph_order %s' % (' '.join(ord))
        print 'total.label total'
        print 'total.draw LINE1'
        print 'total.colour FF0000'
        print 'total.info Total number of nodes.'
    else:
        print 'total.value %d' % (nTotal)

if __name__ == '__main__':
    main()
